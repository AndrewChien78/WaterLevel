plot.ts(a)
a <-ts(1:12, frequency = 12, start = c(2017))
plot.ts(a)
a
View(atimCreek)
a <-ts(1:12, frequency = 12, start = c(2017,1,1))
a
atimCreek_Series
atimCreek_ts <-ts(atimCreekSeries)
atimCreek_ts <-ts(atimCreek_Series)
atimCreek_ts
View(atimCreek_WL)
View(atimCreek_WL_Sort)
View(atimCreek_Series)
atimCreek_Series <- select(atimCreek_WL_Sort, Water.Level..m.)
library(tidyverse)
library(zoo)
library(xts)
library(lubridate)
atimCreek_Series <- select(atimCreek_WL_Sort, Water.Level..m.)
View(atimCreek_Series)
View(atimCreek_WL_Sort)
View(atimCreek_Series)
write.csv(atimCreek_Series, "C:/Users/andre/Desktop/WaterLevel/atimCreek_Series.csv")
atimCreek_ts <-ts(atimCreek_Series)
plot.ts(atimCreek_ts)
View(atimCreek)
atimCreek_ts2 <- filter(atimCreek_ts, Water.Level..m >0)
atimCreek_ts2 <- stats::filter(atimCreek_ts, Water.Level..m >0)
atimCreek_WL_Clean <- filter(atimCreek_WL_Sort, Water.Level..m >0 )
View(atimCreek_WL_Sort)
atimCreek_WL_Clean <- filter(atimCreek_WL_Sort, Water.Level..m. > 0 )
154151-154053
atimCreek_Series <- select(atimCreek_WL_Clean, Water.Level..m.)
write.csv(atimCreek_Series, "C:/Users/andre/Desktop/WaterLevel/atimCreek_Series.csv")
atimCreek_ts <-ts(atimCreek_Series)
plot.ts(atimCreek_ts)
plot (atimCreek_WL_Sort)
atimCreek_Series2 <- select(atimCreek_WL_Sort, Water.Level..m.)
atimCreek_Series2 <- select(atimCreek_WL_Sort, Water.Level..m.)
atimCreek_ts <-ts(atimCreek_Series2)
atimCreek_ts <-ts(atimCreek_Series2)
plot.ts(atimCreek_ts)
atimCreek_Series <- select(atimCreek_WL_Clean, Water.Level..m.)
write.csv(atimCreek_Series, "C:/Users/andre/Desktop/WaterLevel/atimCreek_Series.csv")
atimCreek_ts <-ts(atimCreek_Series)
plot.ts(atimCreek_ts)
atimCreek_ts
a
a <-ts(1:12, frequency = 6, start = c(2017))
a
a <-ts(1:12, frequency = 24*6, start = c(2017))
a <-ts(1:100, frequency = 24*6, start = c(2017))
a
a <-ts(1:100, frequency = 6, start = c(2017))
a
a <-ts(1:100, frequency = 24*6, start = c(2017))
a
ts(1:100, frequency = 24*6, start = c(2017))
ts(1:100, frequency = 24, start = c(2017))
ts(1:100, frequency = 12, start = c(2017))
ts(1:100, frequency = 10, start = c(2017))
ts(1:12, frequency = 12, start = c(2017))
ts(1:24, frequency = 12, start = c(2017))
ts(1:24, frequency = 6, start = c(2017))
ts(1:24, frequency = 24, start = c(2017))
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 4*24*365)
plot.ts(atimeCreek_ts2)
plot.ts(atimCreek_ts2)
atimCreek_ts2
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 4*24*365, start=C(2016))
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 4*24*365, start=C(2016,1))
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 4*24*365, start=)
plot.ts(atimeCreek_ts2)
plot.ts(atimCreek_ts2)
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 4*24*365, start=c(2016))
plot.ts(atimCreek_ts2)
plot.ts(atimCreek_ts)
plot.ts(atimCreek_ts2)
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 12*24*365, start=c(2016))
plot.ts(atimCreek_ts2)
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 12*24*365, start=c(2016.7))
plot.ts(atimCreek_ts2)
library(lubridate)
begin <- c("May 11, 1996", "September 12, 2001", "July 1, 1988")
end <- c("7/8/97","10/23/02","1/4/91")
class(begin)
class(end)
(begin <- mdy(begin))
(end <- mdy(end))
class(begin)
as.numeric(begin)
begin <-c("15 October 2016 01:00:00 PM")
class(begin)
begin <-dmy_hms(MST)
begin <-dmy_hms(tz=UTX-7)
begin <-dmy_hms(tz=UTC-7)
begin <-dmy_hms(tz=UTC)
begin <-dmy_hms(tz=MST)
begin <-dmy_hms(tz="MST")
class(begin)
begin
begin <-c("15 October 2016 01:00:00 PM, MST")
begin
class(begin)
begin <-dmy_hms(begin,tz="MST")
begin
class(begin)
as.numeric(begin)
NewYear2016 <- "1 Jan 2016 00:00:00 MST"
NewYear2016_2 <-dmy_hms(NewYear2016,tz="MST")
NewYear2016_2
begin-NewYear2016_2
begin-NewYear2016_2/(2016)
begin-NewYear2016_2/365
(begin-NewYear2016_2)/365
(begin-NewYear2016_2)/366
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(atimCreek_ts2)
class(begin)
OlsonNames()
begin
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 12*24*365, start=c(begin))
plot.ts(atimCreek_ts2)
class(begin)
as.date(begin)
as.Date(begin)
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 12*24*365, start=c(as.Date(begin))
als
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 12*24*365, start=c(as.Date(begin)))
plot.ts(atimCreek_ts2)
as.Date.ts(begin)
as.Date(begin)
as.Date.default(begin)
as.Date.factor(begin)
2016.7888
newdate=2016.78888
as.Date(newdate)
#install.packages("xts")
#install.packages("lubridate")
#install.packages("zoo")
library(tidyverse)
library(zoo)
library(xts)
library(lubridate)
workingDirectory <- "C:/Users/andre/Desktop/WaterLevel"
inputDataFile <- "/data/Water_Levels_and_Flows.csv
stationName <- "atimCreek"
stationNumber <- "05EA012"
inputDataFile <- "/data/Water_Levels_and_Flows.csv"
setwd(workingDirectory)
Water<- read.csv(inputDataFile)
inputDataFile <- "data/Water_Levels_and_Flows.csv"
Water<- read.csv(inputDataFile)
wd
getwd
getwd()
Water<- read.csv(inputDataFile)
Water<- read.csv(inputDataFile)
view(Water)
View(Water)
plot(cars)
stationName <- filter(Water, Station.Number == stationNumber)
stationName <- "atimCreek"
#install.packages("xts")
#install.packages("lubridate")
#install.packages("zoo")
library(tidyverse)
library(zoo)
library(xts)
library(lubridate)
working.directory <- "C:/Users/andre/Desktop/WaterLevel"
working.directory <- "C:/Users/andre/Desktop/WaterLevel"
input.datafile <- "data/Water_Levels_and_Flows.csv"
station.name <- "atimCreek"
station.id <- "05EA012"
# Edmonton "05DF001" Edmonton not used as it has two records with identical time stamp
setwd(working.directory)
input.datafile <- "data/Water_Levels_and_Flows.csv"
station.name <- "atimCreek"
station.id <- "05EA012"
# Edmonton "05DF001" Edmonton not used as it has two records with identical time stamp
setwd(working.directory)
water.dataset<- read.csv(input.datafile)
station.data <- filter(water.dataset, Station.Number == station.id)
View(station.data)
write.csv(station.name, file=paste(f_name,".csv", sep="")
)
write.csv(station.data, file=paste(station.name,".csv", sep=""))
write.csv(station.data, file=paste(data.directory,station.name,".csv", sep=""))
data.directory <- "/data"
write.csv(station.data, file=paste(data.directory,station.name,".csv", sep=""))
write.csv(station.data, file=paste(working.directory,data.directory,station.name,".csv", sep=""))
working.directory <- getwd()
write.csv(station.data, file=paste(working.directory,data.directory,station.name,".csv", sep=""))
write.csv(station.data, file=paste(working.directory,data.directory,station.name,".csv", sep=""))
write.csv(station.data, file=paste(working.directory,data.directory,station.name,".csv", sep=""))
data.directory <- "/data/"
write.csv(station.data, file=paste(working.directory,data.directory,station.name,".csv", sep=""))
station.waterlevel<- select(station.data, Date.and.Time, Water.Level..m.)
View(station.waterlevel)
station.sortedwaterlevel <- station.waterlevel[order(as.POSIXct(atimCreek_WL$Date.and.Time, format="%m/%d/%Y %H:%M:%S")),]
station.sortedwaterlevel <- station.waterlevel[order(as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S")),]
write.csv(station.sortedwaterlevel,file=paste(working.directory,data.directory,station.name,"sorted_water_level.csv", sep=""))
#"C:/Users/andre/Desktop/WaterLevel/atimCreek_WL_Sort.csv")
unlink('River_Water_Level_Prediction_cache', recursive = TRUE)
knit_with_parameters('C:/Users/andre/Desktop/WaterLevel/River_Water_Level_Prediction.rmd')
input.datafile <- "data/Water_Levels_and_Flows.csv"
station.name <- "atimCreek"
station.id <- "05EA012"
data.directory <- "/data/"
#setwd(working.directory)
#install.packages("xts")
#install.packages("lubridate")
#install.packages("zoo")
library(tidyverse)
library(zoo)
library(xts)
library(lubridate)
working.directory <- getwd()
water.dataset<- read.csv(input.datafile)
water.dataset<- read.csv(input.datafile)
View(water.dataset)
station.data <- filter(water.dataset, Station.Number == station.id)
unlink('River_Water_Level_Prediction_cache', recursive = TRUE)
ggplot2::mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
#install.packages("xts")
#install.packages("lubridate")
#install.packages("zoo")
library(tidyverse)
library(zoo)
library(xts)
library(lubridate)
working.directory <- getwd()
working.directory <- getwd()
working.directory <- getwd()
working.directory <- getwd()
working.directory <- getwd()
working.directory <- getwd()
working.directory <- getwd()
working.directory <- getwd()
working.directory
input.datafile <- "data/Water_Levels_and_Flows.csv"
station.name <- "atimCreek"
station.id <- "05EA012"
data.directory <- "/data/"
#setwd(working.directory)
water.dataset<- read.csv(input.datafile)
head water.dataset
head (water.dataset)
View(water.dataset)
station.data <- filter(water.dataset, Station.Number == station.id)
working.directory <- getwd()
write.csv(station.data, file=paste(working.directory,data.directory,station.name,".csv", sep=""))
rm(water.dataset)
station.waterlevel<- select(station.data, Date.and.Time, Water.Level..m.)
station.sortedwaterlevel <- station.waterlevel[order(as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S")),]
write.csv(station.sortedwaterlevel,file=paste(working.directory,data.directory,station.name,"_sorted_water_level.csv", sep=""))
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(data=station.sortedwaterlevel) + geom_point(mapping = aes(x = Date.and.Time, y = Water.level..m.))
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(station.sortedwaterlevel, aes(Date.and.Time, Water.level..m.)+ geom_line() +
scale_x_date(format = "%b-%Y") + xlab("") + ylab("Daily Views"))
View(station.sortedwaterlevel)
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(station.sortedwaterlevel, aes(Date.and.Time, Water.level..m.)+ geom_line() +
scale_x_date(format = "%m-%Y") + xlab("") + ylab("Water Level"))
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(station.sortedwaterlevel, aes(Date.and.Time, Water.level..m.)+ geom_line() +
scale_x_date(format = "%Y") + xlab("") + ylab("Water Level"))
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(station.sortedwaterlevel, aes(Date.and.Time, Water.level..m.)+ geom_line() +
scale_x_date(format = """) + xlab("") + ylab("Water Level"))
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(station.sortedwaterlevel, aes(Date.and.Time, Water.level..m.)+ geom_line() +
scale_x_datetime + xlab("") + ylab("Water Level"))
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(station.sortedwaterlevel, aes(Date.and.Time, Water.level..m.)+ geom_line() +
scale_x_datetime() + xlab("") + ylab("Water Level"))
class(station.sortedwaterlevel$Date.and.Time)
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(station.sortedwaterlevel, aes(Date.and.Time, Water.level..m.)+ geom_line() +
scale_x_datetime(as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S")) + xlab("") + ylab("Water Level"))
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(station.sortedwaterlevel, aes(as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S"), Water.level..m.)+ geom_line() +
scale_x_datetime() + xlab("") + ylab("Water Level"))
ggplot(station.sortedwaterlevel, aes(Date.and.Time, Water.level..m.)+ geom_line() +
scale_x_datetime() + xlab("") + ylab("Water Level"))
nycflights13::flights
nycflights13::weather
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(station.sortedwaterlevel, aes(Date.and.Time, Water.level..m.)+ geom_line() +
scale_x_datetime() + xlab("") + ylab("Water Level"))
#need some code to plot station.sortedwaterlevel before cleaning.
water.leveldatetime <- as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S")
ggplot(station.sortedwaterlevel, aes(water.leveldatetime, Water.level..m.) + geom_line() + scale_x_datetime() + xlab("") + ylab("Water Level"))
water.leveldatetime <- as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S")
head(water.leveldatetime)
class(water.leveldatetime)
water.leveldatetime2 <- as.numeric(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S")
class water.leveldatetime2
class(water.leveldatetime2)
ggplot(station.sortedwaterlevel, aes(water.leveldatetime2, Water.level..m.) + geom_line() + scale_x_datetime() + xlab("") + ylab("Water Level"))
mpg
ggplot(mpg,aes(year, cty) + geom_line()+scale_x_date() + xlab("")+ylab(""))
class(year)
class(mpg$year)
class(mpg$cty)
economics
library(ggplot2)
theme_set(theme_minimal())
ggplot(data = economics, aes(x = date, y = pop))+
geom_line(color = "#00AFBB", size = 2)
class(economics$date)
ggplot(station.sortedwaterlevel, aes(x=Date.and.Time,y=Water.Level..m.))+geom_line(color"#00AFBB",size=2)
View(station.sortedwaterlevel)
class(station.sortedwaterlevel$Date.and.Time)
ggplot(station.sortedwaterlevel, aes(x=as.Date(Date.and.Time),y=Water.Level..m.))+geom_line(color"#00AFBB",size=2)
as.Date(station.sortedwaterlevel$Date.and.Time)
as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S")
as.Date(station.sortedwaterlevel$Date.and.Time, format="%Y%M%D")
as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y")
as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S")
as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y")
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(station.sortedwaterlevel, aes(as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y"), Water.level..m.) + geom_line() + scale_x_datetime() + xlab("") + ylab("Water Level"))
a <- as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y")
a
class(a)
class(station.sortedwaterlevel$Water.Level..m.)
ggplot(station.sortedwaterlevel, aes(as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y"), Water.level..m.) + geom_line() + scale_x_datetime() + xlab("") + ylab("Water Level"))
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(data=station.sortedwaterlevel, aes(as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y"), Water.level..m.) + geom_line() + scale_x_datetime() + xlab("") + ylab("Water Level"))
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(data=station.sortedwaterlevel, aes(x = as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y"), y = Water.level..m.)) + geom_line() + scale_x_datetime() + xlab("") + ylab("Water Level")
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(data=station.sortedwaterlevel, aes(x = as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y"), y = Water.level..m.)) + geom_line() + scale_x_datetime() + xlab("") + ylab("Water Level")
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(data=station.sortedwaterlevel, aes(x = as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y"), y = Water.Level..m.)) + geom_line() + scale_x_datetime() + xlab("") + ylab("Water Level")
ggplot(data = economics, aes(x = date, y = pop))+
geom_line(color = "#00AFBB", size = 2)
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(data=station.sortedwaterlevel, aes(x = as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y"), y = Water.Level..m.)) + geom_line(color = "#00AFBB", size = 2) + scale_x_datetime(date_labels = "%b-%d-%Y") + xlab("") + ylab("Water Level")
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(data=station.sortedwaterlevel, aes(x = as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y"), y = Water.Level..m.)) + geom_line(color = "#00AFBB", size = 2) + scale_x_date(date_labels = "%b-%d-%Y") + xlab("") + ylab("Water Level")
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(data=station.sortedwaterlevel, aes(x = as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y"), y = Water.Level..m.)) + geom_line() + scale_x_date(date_labels = "%b-%d-%Y") + xlab("") + ylab("Water Level")
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(data=station.sortedwaterlevel, aes(x = as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S"), y = Water.Level..m.)) + geom_line() + scale_x_datetime() + xlab("") + ylab("Water Level")
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(data=station.sortedwaterlevel, aes(x = as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S"), y = Water.Level..m.)) + geom_line() + scale_x_datetime() + xlab("Time") + ylab("Water Level")
View(station.waterlevel)
View(station.sortedwaterlevel)
#need some code to plot station.sortedwaterlevel before cleaning.
ggplot(data=station.sortedwaterlevel, aes(x = as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S"), y = Water.Level..m.)) + geom_line() + scale_x_datetime() + xlab("Time") + ylab("Water Level")
ggplot(data=station.sortedwaterlevel, aes(x = as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y"), y = Water.Level..m.)) + geom_line() + scale_x_date(date_labels = "%b-%d-%Y") + xlab("") + ylab("Water Level")
station.cleanwaterlevel <- filter(station.sortedwaterlevel, Water.Level..m. > 0 )
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
#write.csv(atimCreek_Series, "C:/Users/andre/Desktop/WaterLevel/atimCreek_Series.csv")
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(stattion.timeseries)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(station.timeseries)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(station.timeseries)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(station.timeseries)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(station.timeseries)
#need some code to plot station.sortedwaterlevel before cleaning.
station.dirtywaterlevel<-station.sortedwaterlevel
station.dirtyseries <- select(station.dirtywaterlevel, Water.Level..m.)
station.dirtytimeseries <-ts(station.dirtyseries, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(station.dirtytimeseries)
#ggplot(data=station.sortedwaterlevel, aes(x = as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S"), y = Water.Level..m.)) + geom_line() + scale_x_datetime() + xlab("Time") + ylab("Water Level")
station.sortedwaterlevel[1,1]
begin.datetime <- station.sortedwaterlevel[1,1]
begin.datetime
mpg
mpg[1,1]
View(station.sortedwaterlevel)
class(begin.datetime)
begin.datetime <- as.POSIXct(station.sortedwaterlevel[1,1],format="%m/%d/%Y %H:%M:%S")
begin.datetime
begin.datetime <- as.POSIXct(station.sortedwaterlevel[1,1],format="%m/%d/%Y %H:%M:%S",tz="mst")
begin.datetime
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(begin.datetime))
plot.ts(station.timeseries)
begin.datetime <- as.POSIXct(station.sortedwaterlevel[1,1],format="%m/%d/%Y %H:%M:%S",tz="mst")
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(begin.datetime))
#station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(station.timeseries)
station.series <- select(station.sortedwaterlevel, Water.Level..m.)
begin.datetime <- as.POSIXct(station.sortedwaterlevel[1,1],format="%m/%d/%Y %H:%M:%S",tz="mst")
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(begin.datetime))
#station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(station.timeseries)
clear
begin.datetime
as.numeric(begin.datetime)
as.decimal(begin.datetime)
as.Date(begin.datetime)
as.Date(begin.datetime, format="%Y")
begin.datetime <- as.POSIXct(station.sortedwaterlevel[1,1],format="%m/%d/%Y %H:%M:%S",tz="mst")
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.Date(begin.datetime)))
#station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(station.timeseries)
as.year(begin.datetime)
as.yearmon(begin.datetime)
begin.datetime <- as.POSIXct(station.sortedwaterlevel[1,1],format="%m/%d/%Y %H:%M:%S",tz="mst")
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
#station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(station.timeseries)
station.cleanwaterlevel <- filter(station.sortedwaterlevel, Water.Level..m. > 0 )
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
input.datafile <- "data/Water_Levels_and_Flows.csv"
station.name <- "atimCreek"
station.id <- "05EA012"
data.directory <- "/data/"
water.dataset<- read.csv(input.datafile)
input.datafile <- "data/Water_Levels_and_Flows.csv"
station.name <- "atimCreek"
station.id <- "05EA012"
data.directory <- "/data/"
#water.dataset<- read.csv(input.datafile)
View(water.dataset)
station.data <- filter(water.dataset, Station.Number == station.id)
working.directory <- getwd()
write.csv(station.data, file=paste(working.directory,data.directory,station.name,".csv", sep=""))
rm(water.dataset)
station.waterlevel<- select(station.data, Date.and.Time, Water.Level..m.)
station.sortedwaterlevel <- station.waterlevel[order(as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S")),]
write.csv(station.sortedwaterlevel,file=paste(working.directory,data.directory,station.name,"_sorted_water_level.csv", sep=""))
station.series <- select(station.sortedwaterlevel, Water.Level..m.)
begin.datetime <- as.POSIXct(station.sortedwaterlevel[1,1],format="%m/%d/%Y %H:%M:%S",tz="mst")
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
#station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(station.timeseries)
#ggplot(data=station.sortedwaterlevel, aes(x = as.Date(station.sortedwaterlevel$Date.and.Time, format="%m/%d/%Y"), y = Water.Level..m.)) + geom_line() + scale_x_date(date_labels = "%b-%d-%Y") + xlab("") + ylab("Water Level")
#ggplot(data=station.sortedwaterlevel, aes(x = as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S"), y = Water.Level..m.)) + geom_line() + scale_x_datetime() + xlab("Time") + ylab("Water Level")
station.cleanwaterlevel <- filter(station.sortedwaterlevel, Water.Level..m. > 0 )
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
{r fig.cap="\\label{fig:figs} station.name"}
input.datafile <- "data/Water_Levels_and_Flows.csv"
station.name <- "atimCreek"
station.id <- "05EA012"
data.directory <- "/data/"
#water.dataset<- read.csv(input.datafile)
View(water.dataset)
station.data <- filter(water.dataset, Station.Number == station.id)
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
title(main=station.name)
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
title(main=station.name,"Water Level")
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
title(main=station.name)
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
title(main=paste(station.name,"River Water Level")
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
title(main=paste(station.name,"River Water Level",sep="")
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
title(paste(station.name,"River Water Level",sep="")
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
title(main=text(paste(station.name,"River Water Level",sep="")))
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
title(main=file(paste(station.name,"River Water Level",sep="")))
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
title(main=string(paste(station.name,"River Water Level",sep="")))
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
header <- paste(station.name,"River Water Level",sep="")
title(main=header)
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
header <- paste(station.name,"River Water Level",sep=" ")
title(main=header)
station.series <- select(station.cleanwaterlevel, Water.Level..m.)
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
#header <- paste(station.name,"River Water Level",sep=" ")
title(main=paste(station.name,"River Water Level",sep=" "))
begin.datetime <- as.POSIXct(station.sortedwaterlevel[1,1],format="%m/%d/%Y %H:%M:%S",tz="mst")
station.timeseries <-ts(station.series, frequency = 12*24*365, start=c(as.yearmon(begin.datetime)))
plot.ts(station.timeseries)
title(main=paste(station.name,"River Water Level as is",sep=" "))
