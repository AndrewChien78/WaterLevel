q()
Water_Levels_and_Flows <- read.csv("C:/Users/andre/Desktop/WaterLevel/Water_Levels_and_Flows.csv")
View(Water_Levels_and_Flows)
View(Water_Levels_and_Flows)
Water_Levels_and_Flows <- read.csv("C:/Users/andre/Desktop/WaterLevel/Water_Levels_and_Flows.csv")
View(Water_Levels_and_Flows)
View(Water_Levels_and_Flows)
attach(Water_Levels_and_Flows)
summary(Water_Levels_and_Flows)
summary(Water.Level..m.)
library(dplyr)
install.packages("dplyr")
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
nycflights13::flights
?flights
view(flights)
View(flights)
filter(flights, month==1, day==1)
filter(flights, month == 1, day == 1)
filter(flights, month == 1, day == 1)
install.packages("tidyverse")
library(tidyverse)
library("tidyverse"")
library(tidyverse)
install.packages("bindr"")
install.packages("bindr")
install.packages("bindr")
library(tidyverse)
filter(flights, month==1, day==1)
cls
clear
nycflights13::flights
head
head(nycflights13)
filter(flights, month==2, day==1)
feb1<-filter(flights, month==2, day==1)
(feb1<-filter(flights, month==2, day==1))
View(Water_Levels_and_Flows)
View(Water_Levels_and_Flows)
view(Water_Levels_and_Flows)
View(Water_Levels_and_Flows)
WL_Edmonton_1day <- read.csv("C:/Users/andre/Desktop/WaterLevel/WL_Edmonton_1day.csv")
View(WL_Edmonton_1day)
Edmonton <- filter(Water_Levels_and_Flows, Station.Number == 05DF001)
edmonton <- filter(Water_Levels_and_Flows, Station.Number == 05DF001)
river <- filter(Water_Levels_and_Flows, Station.Number == 05DF001)
Edmonton <- filter(Water_Levels_and_Flows, Station.Number == "05DF001")
write.csv(Edmonton, "C:/Users/andre/Desktop/WaterLevel/Edmonton.csv")
View(Edmonton)
Edmonton <-select(Date.and.Time,Water.Level..m.)<-filter(Water_Levels_and_Flows, Station.Number == "05DF001"))
Edmonton <-select(Date.and.Time,Water.Level..m.)<-filter(Water_Levels_and_Flows, Station.Number == "05DF001")
Edmonton <- select(Date.and.Time,Water.Level..m.)<-filter(Water_Levels_and_Flows, Station.Number == "05DF001")
select
select(Date.and.Time)
select(flights, year, month, day)
View(Water_Levels_and_Flows)
select(Edmonton)
View(Edmonton)
View(Water_Levels_and_Flows)
attach(Edmonton)
select(Date.and.Time,Water.Level..m.)
Edmonton <- read.csv("C:/Users/andre/Desktop/WaterLevel/Edmonton.csv")
View(Edmonton)
rm(list=ls())
Edmonton <- read.csv("C:/Users/andre/Desktop/WaterLevel/Edmonton.csv")
View(Edmonton)
attach(Edmonton)
select(Date.and.Time,Water.Level..m.)
library(tidyverse)
select(Date.and.Time,Water.Level..m.)
Edmonton_WL <- select(Date.and.Time, Water.Level..m.)
tidyverse::select(Date.and.Time)
tidyverse::select()
library(nycflights13)
select(flights,year,month,day)
select(Edmonton, Date.and.Time)
Edmonton_WL <- select(Edmonton, Date.and.Time, Water.Level..m.)
View(Edmonton_WL)
View(Edmonton_WL)
kings <- scan("http://robjhyndman.com/tsdldata/misc/kings.dat",skip=3)
kingtimeseries <- ts(kings)
kingtimeseries
kings
births <- scan("http://robjhyndman.com/tsdldata/data/nybirths.dat")
births
birthstimeseries <- ts(births, frequency=12, start=c(1946,1))
birthstimeseries
plot.ts(kingtimeseries)
plot.ts(birthstimeseries)
souvenir <- scan("http://robjhyndman.com/tsdldata/data/fancy.dat")
souvenirtimeseries <- ts(souvenir, frequency=12, start=c(1987,1))
plot.ts(souvenirtimeseries)
mean(births)
mean(souvenir)
Edmonton_series <- select(Edmonton, Water.Level..m.)
Edmonton_ts <-ts(Edmonton_series)
plot.ts(Edmonton_ts)
Edmonton_series
Edmonton_ts
View(Edmonton_series)
View(Edmonton)
View(Edmonton_WL)
WL_Edmonton_1day <- read.csv("C:/Users/andre/Desktop/WaterLevel/WL_Edmonton_1day.csv")
View(WL_Edmonton_1day)
rm
rm(Edmonton)
Water<- read.csv("C:/Users/andre/Desktop/WaterLevel/Water_Levels_and_Flows.csv")
View(Water)
library(tidyverse)
atimCreek <- filter(Water, Station.Number == "05EA012")
View(atimCreek)
atimCreekSeries <- select(atimCreek, Water.Level..m.)
View(atimCreekSeries)
atimCreek_WL <- select(atimCreek, Date.and.Time, Water.Level..m.)
View(atimCreek_WL)
atimCreek_WL[order(as.Date(atimCreek_WL$Date.and.Time, format="%m/%d/%Y")),]
atimCreek_WL_sort <- atimCreek_WL[order(as.Date(atimCreek_WL$Date.and.Time, format="%m/%d/%Y")),]
View(atimCreek_WL_sort)
View(atimCreek_WL_sort)
atimCreek_WL_sort <- atimCreek_WL[order(as.Date(atimCreek_WL$Date.and.Time, format="%m/%d/%Y/%hh/%mm")),]
View(atimCreek_WL)
atimCreek_WL_sort <- atimCreek_WL[order(as.Date(atimCreek_WL$Date.and.Time, format="%m/%d/%Y:%H:%M:%S")),]
atimCreek_WL_sort <- atimCreek_WL[order(as.Date(atimCreek_WL$Date.and.Time, format="%m/%d/%Y")),]
atimCreek_WL_sort <- atimCreek_WL[order(as.Date(atimCreek_WL$Date.and.Time, format="%m/%d/%Y:%H:%M:%S")),]
View(atimCreek_WL_sort)
atimCreek_WL[order(as.Date(atimCreek_WL$Date.and.Time, format="%m/%d/%Y:%H:%M:%S")),]
atimCreek_WL[order(as.Date(atimCreek_WL$Date.and.Time, format="%m/%d/%Y %H:%M:%S")),]
atimCreek_WL_sort <- atimCreek_WL[order(as.POSIXct(atimCreek_WL$Date.and.Time, format="%m/%d/%Y %H:%M:%S")),]
View(atimCreek_WL_sort)
atimCreek_WL_sort
library(tidyverse)
Water<- read.csv("C:/Users/andre/Desktop/WaterLevel/Water_Levels_and_Flows.csv")
atimCreek <- filter(Water, Station.Number == "05EA012")
write.csv(atimCreek, "C:/Users/andre/Desktop/WaterLevel/atimCreek.csv")
rm(Water_Levels_and_Flows)
rm(Water)
atimCreek_WL <- select(atimCreek, Date.and.Time, Water.Level..m.)
View(atimCreek_WL)
atimCreek_WL_Sort <- atimCreek_WL[order(as.POSIXct(atimCreek_WL$Date.and.Time, format="%m/%d/%Y %H:%M:%S")),]
View(atimCreek_WL_Sort)
atimCreek_Series <- select(atimCreek, Water.Level..m.)
View(atimCreek_Series)
write.csv(atimCreekSeries, "C:/Users/andre/Desktop/WaterLevel/atimCreekSeries.csv")
write.csv(atimCreek_Series, "C:/Users/andre/Desktop/WaterLevel/atimCreek_Series.csv")
write.csv(atimCreek_WL_Sort, "C:/Users/andre/Desktop/WaterLevel/atimCreek_WL_Sort.csv")
View(atimCreek_WL_Sort)
library(xts)
library(lubridate)
install.packages(xts)
install.packages("xts")
install.packages("lubridate")
install.packages("lubridate")
https://stackoverflow.com/questions/27704804/r-time-series-with-datapoints-every-15-min
library(xts)
install.packages("zoo")
install.packages("zoo")
library(xts)
library(zoo)
library(xts)
library(lubridate)
View(atimCreek_Series)
View(atimCreek_WL)
View(atimCreek_WL_Sort)
atimCreek_df <- atimCreek_Series.frame(interval = seq(mdy_hms('10/15/2016 01:00:00PM'),
by = '15 min',length.out=(60*24*365/15)),
atimCreek_Series = rnorm(60*24*365/15))
atimCreek_df <- atimCreek_Series.frame(interval = seq(mdy_hms('10/15/2016 01:00:00PM'),by = '15 min',length.out=(60*24*365/15)),atimCreek_Series = rnorm(60*24*365/15))
atimCreek_df <- data.frame(interval = seq(mdy_hms('10/15/2016 01:00:00PM'),by = '15 min',length.out=(60*24*365/15)),atimCreek_Series = rnorm(60*24*365/15))
View(atimCreek_df)
View(atimCreek_Series)
View(atimCreek_df)
atimCreek_ts <- xts(atimCreek_df, order.by=atimCreek_df$interval)
View(atimCreek_ts)
View(atimCreek_df)
View(atimCreek_df)
View(atimCreek)
View(atimCreek)
View(atimCreek_df)
View(atimCreek_Series)
View(atimCreek_ts)
View(atimCreek_WL)
View(atimCreek)
rm atimCreek_df
rm
rm(atimCreek_df)
View(atimCreek_Series)
View(atimCreek_ts)
rm(atimCreek_ts)
View(atimCreek_WL_Sort)
View(atimCreek_WL)
View(atimCreek_WL_Sort)
atimCreek_WL_Sort_2017 <- filter(atimCreek_WL_Sort, year = 2017)
atimCreek_WL_Sort_2017 <- filter(atimCreek_WL_Sort, year == 2017)
atimCreek_WL_Sort_2017 <- filter(atimCreek_WL_Sort$Date.and.Time >= as.Date("01/01/2017"))
require(graphics)
ts(1:10, frequency = 4, start = c(1959, 2)) # 2nd Quarter of 1959
print( ts(1:10, frequency = 7, start = c(12, 2)), calendar = TRUE)
gnp <- ts(cumsum(1 + round(rnorm(100), 2)),
start = c(1954, 7), frequency = 12)
plot(gnp) # using 'plot.ts' for time-series plot
gnp
rnorm
a <-ts(1:52, frequency = 52, start = c(2017))
a
plot.ts(a)
b <- ts(1:10, frequency = 7, start = c(12, 2)), calendar = TRUE)
b <- ts(1:10, frequency = 7, start = c(12, 2))
b
print (a, calendar = true)
print (a, calendar = TRUE)
a <-ts(1:52, frequency = 52, start = c(2017))
a
a <-ts(1:52, frequency = 4, start = c(2017))
a
a
a <-ts(1:12, frequency = 12, start = c(2017))
a
a <-ts(1:12, frequency = 52, start = c(2017))
a
a <-ts(1:52, frequency = 52, start = c(2017))
a
plot.ts(a)
a <-ts(1:12, frequency = 12, start = c(2017))
plot.ts(a)
a
View(atimCreek)
a <-ts(1:12, frequency = 12, start = c(2017,1,1))
a
atimCreek_Series
atimCreek_ts <-ts(atimCreekSeries)
atimCreek_ts <-ts(atimCreek_Series)
atimCreek_ts
View(atimCreek_WL)
View(atimCreek_WL_Sort)
View(atimCreek_Series)
atimCreek_Series <- select(atimCreek_WL_Sort, Water.Level..m.)
library(tidyverse)
library(zoo)
library(xts)
library(lubridate)
atimCreek_Series <- select(atimCreek_WL_Sort, Water.Level..m.)
View(atimCreek_Series)
View(atimCreek_WL_Sort)
View(atimCreek_Series)
write.csv(atimCreek_Series, "C:/Users/andre/Desktop/WaterLevel/atimCreek_Series.csv")
atimCreek_ts <-ts(atimCreek_Series)
plot.ts(atimCreek_ts)
View(atimCreek)
atimCreek_ts2 <- filter(atimCreek_ts, Water.Level..m >0)
atimCreek_ts2 <- stats::filter(atimCreek_ts, Water.Level..m >0)
atimCreek_WL_Clean <- filter(atimCreek_WL_Sort, Water.Level..m >0 )
View(atimCreek_WL_Sort)
atimCreek_WL_Clean <- filter(atimCreek_WL_Sort, Water.Level..m. > 0 )
154151-154053
atimCreek_Series <- select(atimCreek_WL_Clean, Water.Level..m.)
write.csv(atimCreek_Series, "C:/Users/andre/Desktop/WaterLevel/atimCreek_Series.csv")
atimCreek_ts <-ts(atimCreek_Series)
plot.ts(atimCreek_ts)
plot (atimCreek_WL_Sort)
atimCreek_Series2 <- select(atimCreek_WL_Sort, Water.Level..m.)
atimCreek_Series2 <- select(atimCreek_WL_Sort, Water.Level..m.)
atimCreek_ts <-ts(atimCreek_Series2)
atimCreek_ts <-ts(atimCreek_Series2)
plot.ts(atimCreek_ts)
atimCreek_Series <- select(atimCreek_WL_Clean, Water.Level..m.)
write.csv(atimCreek_Series, "C:/Users/andre/Desktop/WaterLevel/atimCreek_Series.csv")
atimCreek_ts <-ts(atimCreek_Series)
plot.ts(atimCreek_ts)
atimCreek_ts
a
a <-ts(1:12, frequency = 6, start = c(2017))
a
a <-ts(1:12, frequency = 24*6, start = c(2017))
a <-ts(1:100, frequency = 24*6, start = c(2017))
a
a <-ts(1:100, frequency = 6, start = c(2017))
a
a <-ts(1:100, frequency = 24*6, start = c(2017))
a
ts(1:100, frequency = 24*6, start = c(2017))
ts(1:100, frequency = 24, start = c(2017))
ts(1:100, frequency = 12, start = c(2017))
ts(1:100, frequency = 10, start = c(2017))
ts(1:12, frequency = 12, start = c(2017))
ts(1:24, frequency = 12, start = c(2017))
ts(1:24, frequency = 6, start = c(2017))
ts(1:24, frequency = 24, start = c(2017))
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 4*24*365)
plot.ts(atimeCreek_ts2)
plot.ts(atimCreek_ts2)
atimCreek_ts2
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 4*24*365, start=C(2016))
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 4*24*365, start=C(2016,1))
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 4*24*365, start=)
plot.ts(atimeCreek_ts2)
plot.ts(atimCreek_ts2)
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 4*24*365, start=c(2016))
plot.ts(atimCreek_ts2)
plot.ts(atimCreek_ts)
plot.ts(atimCreek_ts2)
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 12*24*365, start=c(2016))
plot.ts(atimCreek_ts2)
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 12*24*365, start=c(2016.7))
plot.ts(atimCreek_ts2)
library(lubridate)
begin <- c("May 11, 1996", "September 12, 2001", "July 1, 1988")
end <- c("7/8/97","10/23/02","1/4/91")
class(begin)
class(end)
(begin <- mdy(begin))
(end <- mdy(end))
class(begin)
as.numeric(begin)
begin <-c("15 October 2016 01:00:00 PM")
class(begin)
begin <-dmy_hms(MST)
begin <-dmy_hms(tz=UTX-7)
begin <-dmy_hms(tz=UTC-7)
begin <-dmy_hms(tz=UTC)
begin <-dmy_hms(tz=MST)
begin <-dmy_hms(tz="MST")
class(begin)
begin
begin <-c("15 October 2016 01:00:00 PM, MST")
begin
class(begin)
begin <-dmy_hms(begin,tz="MST")
begin
class(begin)
as.numeric(begin)
NewYear2016 <- "1 Jan 2016 00:00:00 MST"
NewYear2016_2 <-dmy_hms(NewYear2016,tz="MST")
NewYear2016_2
begin-NewYear2016_2
begin-NewYear2016_2/(2016)
begin-NewYear2016_2/365
(begin-NewYear2016_2)/365
(begin-NewYear2016_2)/366
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 12*24*365, start=c(2016.7883652))
plot.ts(atimCreek_ts2)
class(begin)
OlsonNames()
begin
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 12*24*365, start=c(begin))
plot.ts(atimCreek_ts2)
class(begin)
as.date(begin)
as.Date(begin)
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 12*24*365, start=c(as.Date(begin))
als
atimCreek_ts2 <-ts(atimCreek_Series, frequency = 12*24*365, start=c(as.Date(begin)))
plot.ts(atimCreek_ts2)
as.Date.ts(begin)
as.Date(begin)
as.Date.default(begin)
as.Date.factor(begin)
2016.7888
newdate=2016.78888
as.Date(newdate)
#install.packages("xts")
#install.packages("lubridate")
#install.packages("zoo")
library(tidyverse)
library(zoo)
library(xts)
library(lubridate)
workingDirectory <- "C:/Users/andre/Desktop/WaterLevel"
inputDataFile <- "/data/Water_Levels_and_Flows.csv
stationName <- "atimCreek"
stationNumber <- "05EA012"
inputDataFile <- "/data/Water_Levels_and_Flows.csv"
setwd(workingDirectory)
Water<- read.csv(inputDataFile)
inputDataFile <- "data/Water_Levels_and_Flows.csv"
Water<- read.csv(inputDataFile)
wd
getwd
getwd()
Water<- read.csv(inputDataFile)
Water<- read.csv(inputDataFile)
view(Water)
View(Water)
plot(cars)
stationName <- filter(Water, Station.Number == stationNumber)
stationName <- "atimCreek"
#install.packages("xts")
#install.packages("lubridate")
#install.packages("zoo")
library(tidyverse)
library(zoo)
library(xts)
library(lubridate)
working.directory <- "C:/Users/andre/Desktop/WaterLevel"
working.directory <- "C:/Users/andre/Desktop/WaterLevel"
input.datafile <- "data/Water_Levels_and_Flows.csv"
station.name <- "atimCreek"
station.id <- "05EA012"
# Edmonton "05DF001" Edmonton not used as it has two records with identical time stamp
setwd(working.directory)
input.datafile <- "data/Water_Levels_and_Flows.csv"
station.name <- "atimCreek"
station.id <- "05EA012"
# Edmonton "05DF001" Edmonton not used as it has two records with identical time stamp
setwd(working.directory)
water.dataset<- read.csv(input.datafile)
station.data <- filter(water.dataset, Station.Number == station.id)
View(station.data)
write.csv(station.name, file=paste(f_name,".csv", sep="")
)
write.csv(station.data, file=paste(station.name,".csv", sep=""))
write.csv(station.data, file=paste(data.directory,station.name,".csv", sep=""))
data.directory <- "/data"
write.csv(station.data, file=paste(data.directory,station.name,".csv", sep=""))
write.csv(station.data, file=paste(working.directory,data.directory,station.name,".csv", sep=""))
working.directory <- getwd()
write.csv(station.data, file=paste(working.directory,data.directory,station.name,".csv", sep=""))
write.csv(station.data, file=paste(working.directory,data.directory,station.name,".csv", sep=""))
write.csv(station.data, file=paste(working.directory,data.directory,station.name,".csv", sep=""))
data.directory <- "/data/"
write.csv(station.data, file=paste(working.directory,data.directory,station.name,".csv", sep=""))
station.waterlevel<- select(station.data, Date.and.Time, Water.Level..m.)
View(station.waterlevel)
station.sortedwaterlevel <- station.waterlevel[order(as.POSIXct(atimCreek_WL$Date.and.Time, format="%m/%d/%Y %H:%M:%S")),]
station.sortedwaterlevel <- station.waterlevel[order(as.POSIXct(station.waterlevel$Date.and.Time, format="%m/%d/%Y %H:%M:%S")),]
write.csv(station.sortedwaterlevel,file=paste(working.directory,data.directory,station.name,"sorted_water_level.csv", sep=""))
#"C:/Users/andre/Desktop/WaterLevel/atimCreek_WL_Sort.csv")
unlink('River_Water_Level_Prediction_cache', recursive = TRUE)
knit_with_parameters('C:/Users/andre/Desktop/WaterLevel/River_Water_Level_Prediction.rmd')
